name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create local Dockerfile
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04

          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && apt-get install -y \
              git zip unzip openjdk-17-jdk python3-pip \
              build-essential libtool m4 automake autoconf \
              libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
              libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev \
              gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-libav \
              libmtdev-dev libgl1-mesa-dev libgles2-mesa-dev libusb-dev libspnav-dev \
              libasound2-dev libffi-dev libjpeg-dev libstdc++6 libncurses-dev \
              python3-setuptools python3-wheel pkg-config cmake curl && \
              pip3 install --upgrade Cython virtualenv buildozer

          WORKDIR /app
          ENTRYPOINT ["buildozer"]
          EOF

      - name: Build Docker image
        run: docker build -t custom-buildozer .

      - name: Run Buildozer in container
        run: |
          docker run --rm -v ${{ github.workspace }}:/app custom-buildozer android release

      - name: Locate APK
        id: find_apk
        run: |
          apk_path=$(find . -name "*.apk" | head -n 1)
          echo "apk_path=$apk_path"
          echo "apk_path=$apk_path" >> $GITHUB_OUTPUT
          test -f "$apk_path" || exit 1

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Aurelia-APK
          path: ${{ steps.find_apk.outputs.apk_path }}
