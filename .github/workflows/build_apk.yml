name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name:  Repository auschecken
      uses: actions/checkout@v4

    - name:  Python installieren
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name:  pip aktualisieren
      run: python -m pip install --upgrade pip

    - name:  Notwendige Python-Pakete installieren (Grundlage)
      run: |
        pip install pipreqs build jinja2 toml packaging colorama appdirs

    - name:  BOM-Zeichen aus .py-Dateien entfernen
      run: |
        echo "Entferne BOM aus .py-Dateien..."
        find . -name "*.py" -exec sed -i '1s/^\xEF\xBB\xBF//' {} +

    - name:  requirements.txt automatisch erzeugen
      run: |
        pipreqs . --force --encoding=utf-8
        
    - name:  Update buildozer.spec mit requirements.txt
      run: |
        echo "Aktualisiere buildozer.spec mit requirements.txt-Inhalten..."
        REQS=$(paste -sd, requirements.txt)
        sed -i "s/^requirements = .*/requirements = $REQS/" buildozer.spec

    - name:  Abh√§ngigkeiten aus requirements.txt installieren
      run: |
        pip install -r requirements.txt

    - name:  Buildozer & systemweite Abh√§ngigkeiten installieren
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk python3-pip \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev \
          gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-libav \
          libmtdev-dev libgl1-mesa-dev libgles2-mesa-dev libusb-dev libspnav-dev \
          libasound2-dev libffi-dev libjpeg-dev \
          git-core python3-setuptools python3-wheel libstdc++6 \
          pkg-config autoconf automake libtool cmake libncurses-dev

    - name:  Java-Version pr√ºfen
      run: java -version

    - name:  Buildozer & virtuelle Umgebung installieren
      run: |
        pip install --upgrade Cython virtualenv buildozer

    - name:  buildozer.spec initialisieren (nur falls nicht vorhanden)
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

    - name:  python-for-android klonen (falls nicht vorhanden)
      run: |
        if [ ! -d .buildozer/android/platform/python-for-android ]; then
          git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android
        fi

    - name:  Buildozer aufr√§umen & aktualisieren
      run: |
        buildozer android clean
        buildozer android update
        
    - name: üìÑ Android SDK Lizenz automatisch akzeptieren
      run: |
        yes | sdkmanager --licenses || true

    - name:  APK bauen (Release-Modus)
      run: |
        yes | buildozer android release

    - name:  APK hochladen als Artefakt
      uses: actions/upload-artifact@v4
      with:
        name: Aurelia-APK
        path: bin/*.apk
