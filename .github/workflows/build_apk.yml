name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Repository auschecken
      uses: actions/checkout@v4

    - name: 🐍 Python 3.11 installieren
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: ⚙️ Android SDK installieren (Command Line Tools)
      run: |
        mkdir -p $HOME/.android/cmdline-tools
        cd $HOME/.android/cmdline-tools
        curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip sdk.zip
        rm sdk.zip
        mv cmdline-tools latest

    - name: 🔧 Android-Umgebungsvariablen setzen
      run: |
        echo "ANDROID_HOME=$HOME/.android" >> $GITHUB_ENV
        echo "$HOME/.android/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/.android/platform-tools" >> $GITHUB_PATH

    - name: ✅ Android SDK Lizenzen akzeptieren
      run: yes | sdkmanager --licenses || true

    - name: 🔄 pip & essentielle Pakete installieren
      run: |
        python -m pip install --upgrade pip
        pip install pipreqs build jinja2 toml packaging colorama appdirs
        
    - name: 🔧 Libtool & autotools vollständig installieren
      run: |
        sudo apt-get update
        sudo apt-get install -y libtool m4 automake autoconf

    - name: 🧰 Systemabhängigkeiten installieren
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk python3-pip \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev \
          gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-libav \
          libmtdev-dev libgl1-mesa-dev libgles2-mesa-dev libusb-dev libspnav-dev \
          libasound2-dev libffi-dev libjpeg-dev \
          git-core python3-setuptools python3-wheel libstdc++6 \
          pkg-config autoconf automake libtool cmake libncurses-dev

    - name: ☕ Java-Version prüfen
      run: java -version

    - name: 🛠️ Buildozer & python-for-android installieren
      run: |
        pip install --upgrade Cython virtualenv buildozer
        if [ ! -f buildozer.spec ]; then buildozer init; fi
        if [ ! -d .buildozer/android/platform/python-for-android ]; then
          git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android
        fi

    - name: 📄 requirements.txt automatisch erzeugen
      run: pipreqs . --force --encoding=utf-8

    - name: 🔁 buildozer.spec mit requirements.txt aktualisieren
      run: |
        echo "Aktualisiere buildozer.spec..."
        REQS=$(paste -sd, requirements.txt)
        sed -i "s/^requirements = .*/requirements = $REQS/" buildozer.spec || echo "requirements = $REQS" >> buildozer.spec

    - name: 📦 requirements installieren
      run: pip install -r requirements.txt

    - name: 🧹 BOM-Zeichen aus .py-Dateien entfernen
      run: |
        echo "Entferne BOM aus .py-Dateien..."
        find . -name "*.py" -exec sed -i '1s/^\xEF\xBB\xBF//' {} +

    - name: 🧪 Erstversuch: Build starten (Fehlschlag erwartet)
      run: |
        yes | buildozer android release || true

    - name: 🔧 Autotools initialisieren für libffi-Fix
      run: |
        echo "🔍 Suche libffi Build-Verzeichnis..."
        TARGET_DIR=$(find .buildozer/android/platform/build -type d -name "libffi" | head -n 1)
        echo "📂 Verzeichnis gefunden: $TARGET_DIR"
        if [ -z "$TARGET_DIR" ]; then
          echo "❌ Kein libffi-Verzeichnis gefunden."
          exit 1
        fi

        cd "$TARGET_DIR"

        if [ ! -f configure.ac ]; then
          echo "❌ configure.ac nicht gefunden im libffi-Verzeichnis!"
          exit 1
        fi

        echo "🔧 wende libffi m4-Patch an..."
        sed -i '/AC_INIT/a m4_pattern_allow([LT_SYS_SYMBOL_USCORE])' configure.ac

        echo "📦 initialisiere Autotools..."
        libtoolize --force
        mkdir -p m4
        aclocal -I m4
        autoreconf --install --force --verbose


    - name: 🔁 Zweiter Versuch: APK bauen (Release)
      run: |
        yes | buildozer android release

    - name: ⬆️ APK als Artefakt hochladen
      uses: actions/upload-artifact@v4
      with:
        name: Aurelia-APK
        path: bin/*.apk
